<?xml version="1.0" encoding="utf-8"?>
<doc>
    <assembly>
        <name>Azure.AI.OpenAI</name>
    </assembly>
    <members>
        <member name="T:Azure.AI.OpenAI.ChatChoice">
            <summary>
            The representation of a single completions result for a chat completions request.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatChoice.Message">
            <summary>
            Gets the chat message associated with this chat choice.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatChoice.Index">
            <summary> Gets the ordered index associated with this chat choice. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatChoice.FinishReason">
            <summary> Gets a description of how evaluation of this chat choice ended. </summary>
        </member>
        <member name="T:Azure.AI.OpenAI.ChatCompletions">
            <summary>
            A representation of a full response to a chat completions request.
            </summary>
            <remarks>
            Chat completions can contain one or more chat choices, each holding a message with string content and an
            associated role. When requesting more than one completion, a corresponding number of additional choices will
            appear in the chat completions result.
            </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatCompletions.Id">
            <summary>
            Gets a unique identifier associated with a chat completions response.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatCompletions.Created">
            <summary>
            Gets the UTC timestamp at which this chat completions response was generated.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatCompletions.Choices">
            <summary>
            Gets the collection of chat choices generated in a chat completions request.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatCompletions.Usage">
            <summary>
            Gets usage counts for tokens using the chat completions API.
            </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatCompletions.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.AI.OpenAI.ChatCompletionsOptions">
            <summary>
            The configuration information used for a chat completions request.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatCompletionsOptions.ChoicesPerPrompt">
            <summary>
                 Gets or sets the number of choices that should be generated per provided prompt.
                 Has a valid range of 1 to 128.
             </summary>
             <remarks>
                 Because this parameter generates many completions, it can quickly consume your token quota. Use
                 carefully and ensure reasonable settings for <see cref="P:Azure.AI.OpenAI.CompletionsOptions.MaxTokens" /> and <see cref="P:Azure.AI.OpenAI.CompletionsOptions.StopSequences" />.
            
                 <see cref="P:Azure.AI.OpenAI.CompletionsOptions.ChoicesPerPrompt" /> is equivalent to 'n' in the REST request schema.
             </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatCompletionsOptions.FrequencyPenalty">
            <summary>
                Gets or sets a value that influences the probability of generated tokens appearing based on their
                cumulative frequency in generated text.
                Has a valid range of -2.0 to 2.0.
            </summary>
            <remarks>
                Positive values will make tokens less likely to appear as their frequency increases and decrease the
                model's likelihood of repeating the same statements verbatim.
            </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatCompletionsOptions.TokenSelectionBiases">
            <summary>
                 Gets a dictionary of modifications to the likelihood of specified GPT tokens appearing in a completions
                 result. Maps token IDs to associated bias scores from -100 to 100, with minimum and maximum values
                 corresponding to a ban or exclusive selection of that token, respectively.
             </summary>
             <remarks>
                 Token IDs are computed via external tokenizer tools.
                 The exact effect of specific bias values varies per model.
            
                 <see cref="P:Azure.AI.OpenAI.CompletionsOptions.TokenSelectionBiases" /> is equivalent to 'logit_bias' in the REST request schema.
             </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatCompletionsOptions.MaxTokens">
            <summary> Gets the maximum number of tokens to generate. Has minimum of 0. </summary>
            <remarks>
                <see cref="P:Azure.AI.OpenAI.CompletionsOptions.MaxTokens" /> is equivalent to 'max_tokens' in the REST request schema.
            </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatCompletionsOptions.Messages">
            <summary>
                Gets or sets the set of chat messages associated with a chat completions request.
            </summary>
            <remarks>
                This is the full set of chat messages for the history of a conversation between an assistant and user.
                Typical usage begins with a chat message for the System role that provides instructions for the
                behavior of the assistant followed by alternating messages between the User role and Assistant role.
            </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatCompletionsOptions.NucleusSamplingFactor">
            <summary>
                 Gets or set a an alternative value to <see cref="P:Azure.AI.OpenAI.CompletionsOptions.Temperature" />, called nucleus sampling, that causes
                 the model to consider the results of the tokens with <see cref="P:Azure.AI.OpenAI.CompletionsOptions.NucleusSamplingFactor" /> probability
                 mass.
             </summary>
             <remarks>
                 As an example, a value of 0.1 will cause only the tokens comprising the top 10% of probability mass to
                 be considered.
            
                 It is not recommended to modify <see cref="P:Azure.AI.OpenAI.CompletionsOptions.Temperature" /> and <see cref="P:Azure.AI.OpenAI.CompletionsOptions.NucleusSamplingFactor" />
                 for the same completions request as the interaction of these two settings is difficult to predict.
            
                 <see cref="P:Azure.AI.OpenAI.CompletionsOptions.NucleusSamplingFactor" /> is equivalent to 'top_p' in the REST request schema.
             </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatCompletionsOptions.PresencePenalty">
            <summary>
                Gets or sets a value that influences the probability of generated tokens appearing based on their
                existing presence in generated text.
                Has a valid range of -2.0 to 2.0.
            </summary>
            <remarks>
                Positive values will make tokens less likely to appear when they already exist and increase the
                model's likelihood to output new topics.
            </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatCompletionsOptions.StopSequences">
            <summary>
                Gets a list of textual sequences that will end completions generation.
                A maximum of four stop sequences are allowed.
            </summary>
            <remarks>
                <see cref="P:Azure.AI.OpenAI.CompletionsOptions.StopSequences" /> is equivalent to 'stop' in the REST request schema.
            </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatCompletionsOptions.Temperature">
            <summary>
                 Gets or sets the sampling temperature to use that controls the apparent creativity of generated
                 completions.
                 Has a valid range of 0.0 to 2.0 and defaults to 1.0 if not otherwise specified.
             </summary>
             <remarks>
                 Higher values will make output more random while lower values will make results more focused and
                 deterministic.
            
                 It is not recommended to modify <see cref="P:Azure.AI.OpenAI.CompletionsOptions.Temperature" /> and <see cref="P:Azure.AI.OpenAI.CompletionsOptions.NucleusSamplingFactor" />
                 for the same completions request as the interaction of these two settings is difficult to predict.
             </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatCompletionsOptions.User">
            <summary> Gets or sets an identifier for a request for use in tracking and rate-limiting. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatCompletionsOptions.#ctor">
            <summary> Initializes a new instance of ChatCompletionsOptions. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatCompletionsOptions.ToRequestContent">
            <summary> Convert into a Utf8JsonRequestContent. </summary>
        </member>
        <member name="T:Azure.AI.OpenAI.ChatMessage">
            <summary> A single, role-attributed message within a chat completion interaction. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatMessage.Role">
            <summary>
            Gets the role associated with this message.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatMessage.Content">
            <summary>
            Gets the textual content associated with this message.
            </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatMessage.#ctor(Azure.AI.OpenAI.ChatRole,System.String)">
            <summary>
            Initializes a new instance of ChatMessage.
            </summary>
            <param name="role">The role to associate with the message.</param>
            <param name="content">The content to associate with the message.</param>
        </member>
        <member name="T:Azure.AI.OpenAI.ChatRole">
            <summary>
            A description of the intended purpose of a message within a chat completions interaction.
            </summary>
        </member>
        <member name="F:Azure.AI.OpenAI.ChatRole.System">
            <summary>
            The role that instructs or sets the behavior of the assistant.
            </summary>
        </member>
        <member name="F:Azure.AI.OpenAI.ChatRole.Assistant">
            <summary>
            The role that provides responses to system-instructed, user-prompted input.
            </summary>
        </member>
        <member name="F:Azure.AI.OpenAI.ChatRole.User">
            <summary>
            The role that provides input for chat completions.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.ChatRole.Label">
            <summary>
            Gets the label associated with this ChatRole.
            </summary>
            <remarks>
            The label is what will be serialized into the "role" message field of the OpenAI Chat Message format.
            </remarks>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatRole.#ctor(System.String)">
            <summary>
            Creates a new ChatRole instance with the provided label.
            </summary>
            <remarks>
            When possible, use the system-defined ChatRole instances such as ChatRole.System and ChatRole.User. Custom
            ChatRole instances are only needed if 
            </remarks>
            <param name="label"></param>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatRole.op_Implicit(System.String)~Azure.AI.OpenAI.ChatRole">
            <summary>
            Converts a label into a new instance of <see cref="T:Azure.AI.OpenAI.ChatRole" />.
            </summary>
            <param name="label"> the label to use in the new <see cref="T:Azure.AI.OpenAI.ChatRole" /> instance. </param>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatRole.op_Equality(Azure.AI.OpenAI.ChatRole,Azure.AI.OpenAI.ChatRole)">
            <summary>
            Returns a value indicating whether two ChatRole instances are equivalent, as determined by a
            case-insensitive comparison of their labels.
            </summary>
            <param name="left"> the first ChatRole instance to compare </param>
            <param name="right"> the second ChatRole instance to compare </param>
            <returns> true if left and right are both null or have equivalent labels; false otherwise </returns>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatRole.op_Inequality(Azure.AI.OpenAI.ChatRole,Azure.AI.OpenAI.ChatRole)">
            <summary>
            Returns a value indicating whether two ChatRole instances are not equivalent, as determined by a
            case-insensitive comparison of their labels.
            </summary>
            <param name="left"> the first ChatRole instance to compare </param>
            <param name="right"> the second ChatRole instance to compare </param>
            <returns> false if left and right are both null or have equivalent labels; true otherwise </returns>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatRole.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatRole.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatRole.Equals(Azure.AI.OpenAI.ChatRole)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.AI.OpenAI.ChatRole.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.AI.OpenAI.Choice">
            <summary> Choice model within completion response. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.Choice.#ctor">
            <summary> Initializes a new instance of Choice. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.Choice.#ctor(System.String,System.Nullable{System.Int32},Azure.AI.OpenAI.CompletionsLogProbability,System.String)">
            <summary> Initializes a new instance of Choice. </summary>
            <param name="text"> Generated text for given completion prompt. </param>
            <param name="index"> Index. </param>
            <param name="logprobs"> Log Prob Model. </param>
            <param name="finishReason"> Reason for finishing. </param>
        </member>
        <member name="P:Azure.AI.OpenAI.Choice.Text">
            <summary> Generated text for given completion prompt. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.Choice.Index">
            <summary> Index. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.Choice.Logprobs">
            <summary> Log Prob Model. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.Choice.FinishReason">
            <summary> Reason for finishing. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.Choice.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.AI.OpenAI.CompletionsLogProbability">
            <summary> LogProbs model within completion choice. </summary>
            <summary> LogProbs model within completion choice. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsLogProbability.TokenLogProbability">
            <summary> Log Probability of Tokens. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsLogProbability.TopLogProbability">
            <summary> Top Log Probabilities. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.CompletionsLogProbability.#ctor">
            <summary> Initializes a new instance of CompletionsLogProbability. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.CompletionsLogProbability.#ctor(System.Collections.Generic.IReadOnlyList{System.String},System.Collections.Generic.IReadOnlyList{System.Nullable{System.Single}},System.Collections.Generic.IReadOnlyList{System.Collections.Generic.IDictionary{System.String,System.Single}},System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary> Initializes a new instance of CompletionsLogProbability. </summary>
            <param name="tokens"> Tokens. </param>
            <param name="tokenLogProbability"> LogProbs of Tokens. </param>
            <param name="topLogProbability"> Top LogProbs. </param>
            <param name="textOffset"> Text offset. </param>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsLogProbability.Tokens">
            <summary> Tokens. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsLogProbability.TextOffset">
            <summary> Text offset. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.CompletionsLogProbability.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.AI.OpenAI.CompletionsOptions">
            <summary> Post body schema to create a prompt completion from a deployment. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsOptions.ChoicesPerPrompt">
             <summary>
                 Gets or sets the number of choices that should be generated per provided prompt.
                 Has a valid range of 1 to 128.
             </summary>
             <remarks>
                 Because this parameter generates many completions, it can quickly consume your token quota. Use
                 carefully and ensure reasonable settings for <see cref="P:Azure.AI.OpenAI.CompletionsOptions.MaxTokens" /> and <see cref="P:Azure.AI.OpenAI.CompletionsOptions.StopSequences" />.
            
                 <see cref="P:Azure.AI.OpenAI.CompletionsOptions.ChoicesPerPrompt" /> is equivalent to 'n' in the REST request schema.
             </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsOptions.Echo">
            <summary>
                Gets or sets a value specifying whether a completion should include its input prompt as a prefix to
                its generated output.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsOptions.FrequencyPenalty">
            <summary>
                Gets or sets a value that influences the probability of generated tokens appearing based on their
                cumulative frequency in generated text.
                Has a valid range of -2.0 to 2.0.
            </summary>
            <remarks>
                Positive values will make tokens less likely to appear as their frequency increases and decrease the
                model's likelihood of repeating the same statements verbatim.
            </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsOptions.GenerationSampleCount">
             <summary>
                 Gets or sets a value that controls how many completions will be internally generated prior to response
                 formulation.
             </summary>
             <remarks>
                 When used together with <see cref="P:Azure.AI.OpenAI.CompletionsOptions.ChoicesPerPrompt" />, <see cref="P:Azure.AI.OpenAI.CompletionsOptions.GenerationSampleCount" /> controls
                 the number of candidate completions and must be greater than <see cref="P:Azure.AI.OpenAI.CompletionsOptions.ChoicesPerPrompt" />.
            
                 Because this parameter generates many completions, it can quickly consume your token quota. Use
                 carefully and ensure reasonable settings for <see cref="P:Azure.AI.OpenAI.CompletionsOptions.MaxTokens" /> and <see cref="P:Azure.AI.OpenAI.CompletionsOptions.StopSequences" />.
            
                 <see cref="P:Azure.AI.OpenAI.CompletionsOptions.GenerationSampleCount" /> is equivalent to 'best_of' in the REST request schema.
             </remarks>.
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsOptions.LogProbabilityCount">
            <summary>
                Gets or sets a value that controls generation of log probabilities on the
                <see cref="P:Azure.AI.OpenAI.CompletionsOptions.LogProbabilityCount" /> most likely tokens.
                Has a valid range of 0 to 5.
            </summary>
            <remarks>
                <see cref="P:Azure.AI.OpenAI.CompletionsOptions.LogProbabilityCount" /> is equivalent to 'logprobs' in the REST request schema.
            </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsOptions.MaxTokens">
            <summary> Gets the maximum number of tokens to generate. Has minimum of 0. </summary>
            <remarks>
                <see cref="P:Azure.AI.OpenAI.CompletionsOptions.MaxTokens" /> is equivalent to 'max_tokens' in the REST request schema.
            </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsOptions.NucleusSamplingFactor">
             <summary>
                 Gets or set a an alternative value to <see cref="P:Azure.AI.OpenAI.CompletionsOptions.Temperature" />, called nucleus sampling, that causes
                 the model to consider the results of the tokens with <see cref="P:Azure.AI.OpenAI.CompletionsOptions.NucleusSamplingFactor" /> probability
                 mass.
             </summary>
             <remarks>
                 As an example, a value of 0.1 will cause only the tokens comprising the top 10% of probability mass to
                 be considered.
            
                 It is not recommended to modify <see cref="P:Azure.AI.OpenAI.CompletionsOptions.Temperature" /> and <see cref="P:Azure.AI.OpenAI.CompletionsOptions.NucleusSamplingFactor" />
                 for the same completions request as the interaction of these two settings is difficult to predict.
            
                 <see cref="P:Azure.AI.OpenAI.CompletionsOptions.NucleusSamplingFactor" /> is equivalent to 'top_p' in the REST request schema.
             </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsOptions.PresencePenalty">
            <summary>
                Gets or sets a value that influences the probability of generated tokens appearing based on their
                existing presence in generated text.
                Has a valid range of -2.0 to 2.0.
            </summary>
            <remarks>
                Positive values will make tokens less likely to appear when they already exist and increase the
                model's likelihood to output new topics.
            </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsOptions.Prompts">
            <summary>
                Gets the prompts to generate completions from. Defaults to a single prompt of &lt;|endoftext|&gt;
                if not otherwise provided.
            </summary>
            <remarks>
                <see cref="P:Azure.AI.OpenAI.CompletionsOptions.Prompts" /> is equivalent to 'prompt' in the REST request schema.
            </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsOptions.StopSequences">
            <summary>
                Gets a list of textual sequences that will end completions generation.
                A maximum of four stop sequences are allowed.
            </summary>
            <remarks>
                <see cref="P:Azure.AI.OpenAI.CompletionsOptions.StopSequences" /> is equivalent to 'stop' in the REST request schema.
            </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsOptions.Temperature">
             <summary>
                 Gets or sets the sampling temperature to use that controls the apparent creativity of generated
                 completions.
                 Has a valid range of 0.0 to 2.0 and defaults to 1.0 if not otherwise specified.
             </summary>
             <remarks>
                 Higher values will make output more random while lower values will make results more focused and
                 deterministic.
            
                 It is not recommended to modify <see cref="P:Azure.AI.OpenAI.CompletionsOptions.Temperature" /> and <see cref="P:Azure.AI.OpenAI.CompletionsOptions.NucleusSamplingFactor" />
                 for the same completions request as the interaction of these two settings is difficult to predict.
             </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsOptions.TokenSelectionBiases">
             <summary>
                 Gets a dictionary of modifications to the likelihood of specified GPT tokens appearing in a completions
                 result. Maps token IDs to associated bias scores from -100 to 100, with minimum and maximum values
                 corresponding to a ban or exclusive selection of that token, respectively.
             </summary>
             <remarks>
                 Token IDs are computed via external tokenizer tools.
                 The exact effect of specific bias values varies per model.
            
                 <see cref="P:Azure.AI.OpenAI.CompletionsOptions.TokenSelectionBiases" /> is equivalent to 'logit_bias' in the REST request schema.
             </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsOptions.User">
            <summary> Gets or sets an identifier for a request for use in tracking and rate-limiting. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.CompletionsOptions.#ctor">
            <summary> Initializes a new instance of CompletionsOptions. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.CompletionsOptions.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.AI.OpenAI.CompletionsOptions.ToRequestContent">
            <summary> Convert into a Utf8JsonRequestContent. </summary>
        </member>
        <member name="T:Azure.AI.OpenAI.CompletionsUsage">
            <summary>
            Representation of the token counts processed for a completions request.
            Counts consider all tokens across prompts, choices, choice alternates, best_of generations, and other consumers.
            </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.CompletionsUsage.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary> Initializes a new instance of CompletionsUsage. </summary>
            <param name="completionTokens"> Number of tokens received in the completion. </param>
            <param name="promptTokens"> Number of tokens sent in the original request. </param>
            <param name="totalTokens"> Total number of tokens transacted in this request/response. </param>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsUsage.CompletionTokens">
            <summary> Number of tokens received in the completion. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsUsage.PromptTokens">
            <summary> Number of tokens sent in the original request. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.CompletionsUsage.TotalTokens">
            <summary> Total number of tokens transacted in this request/response. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.CompletionsUsage.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.AI.OpenAI.EmbeddingsOptions">
            <summary> Schema to create a prompt completion from a deployment. </summary>
            <summary> Schema to create a prompt completion from a deployment. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.EmbeddingsOptions.#ctor(System.String)">
            <summary> Initializes a new instance of EmbeddingsOptions. </summary>
            <param name="input">
            Input text to get embeddings for, encoded as a string.
            To get embeddings for multiple inputs in a single request, pass an array of strings.
            Each input must not exceed 2048 tokens in length.
            
            Unless you are embedding code, we suggest replacing newlines (\n) in your input with a single space,
            as we have observed inferior results when newlines are present.
            </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="input" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.EmbeddingsOptions.#ctor(System.String,System.String,System.String,System.String)">
            <summary> Initializes a new instance of EmbeddingsOptions. </summary>
            <param name="user"> The ID of the end-user, for use in tracking and rate-limiting. </param>
            <param name="inputType"> input type of embedding search to use. </param>
            <param name="nonAzureModel"> ID of the model to use. </param>
            <param name="input">
            Input text to get embeddings for, encoded as a string.
            To get embeddings for multiple inputs in a single request, pass an array of strings.
            Each input must not exceed 2048 tokens in length.
            
            Unless you are embedding code, we suggest replacing newlines (\n) in your input with a single space,
            as we have observed inferior results when newlines are present.
            </param>
        </member>
        <member name="P:Azure.AI.OpenAI.EmbeddingsOptions.User">
            <summary> The ID of the end-user, for use in tracking and rate-limiting. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.EmbeddingsOptions.InputType">
            <summary> input type of embedding search to use. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.EmbeddingsOptions.Input">
            <summary>
            Input text to get embeddings for, encoded as a string.
            To get embeddings for multiple inputs in a single request, pass an array of strings.
            Each input must not exceed 2048 tokens in length.
            
            Unless you are embedding code, we suggest replacing newlines (\n) in your input with a single space,
            as we have observed inferior results when newlines are present.
            </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.EmbeddingsOptions.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.AI.OpenAI.EmbeddingsOptions.ToRequestContent">
            <summary> Convert into a Utf8JsonRequestContent. </summary>
        </member>
        <member name="T:Azure.AI.OpenAI.OpenAIClient">
            <summary> Azure OpenAI APIs for completions and search. </summary>
            <summary> Azure OpenAI APIs for completions and search. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.#ctor(System.Uri,Azure.AzureKeyCredential,Azure.AI.OpenAI.OpenAIClientOptions)">
            <summary>
                Initializes a instance of OpenAIClient for use with an Azure OpenAI resource.
            </summary>
             <param name="endpoint">
                The URI for an Azure OpenAI resource as retrieved from, for example, Azure Portal.
                This should include protocol and hostname. An example could be:
                https://my-resource.openai.azure.com .
            </param>
            <param name="keyCredential"> A key credential used to authenticate to an Azure OpenAI resource. </param>
            <param name="options"> The options for configuring the client. </param>
            <remarks>
                <see cref="T:Azure.AI.OpenAI.OpenAIClient" /> objects initialized with this constructor can only be used with Azure OpenAI
                resources. To use <see cref="T:Azure.AI.OpenAI.OpenAIClient" /> with the non-Azure OpenAI inference endpoint, use a
                constructor that accepts a non-Azure OpenAI API key, instead.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="endpoint" /> or <paramref name="keyCredential" /> is null.
            </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.#ctor(System.Uri,Azure.AzureKeyCredential)">
            <summary>
                Initializes a instance of OpenAIClient for use with an Azure OpenAI resource.
            </summary>
             <param name="endpoint">
                The URI for an Azure OpenAI resource as retrieved from, for example, Azure Portal.
                This should include protocol and hostname. An example could be:
                https://my-resource.openai.azure.com .
            </param>
            <param name="keyCredential"> A key credential used to authenticate to an Azure OpenAI resource. </param>
            <remarks>
                <see cref="T:Azure.AI.OpenAI.OpenAIClient" /> objects initialized with this constructor can only be used with Azure OpenAI
                resources. To use <see cref="T:Azure.AI.OpenAI.OpenAIClient" /> with the non-Azure OpenAI inference endpoint, use a
                constructor that accepts a non-Azure OpenAI API key, instead.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="endpoint" /> or <paramref name="keyCredential" /> is null.
            </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.AI.OpenAI.OpenAIClientOptions)">
            <summary>
                <summary>
                Initializes a instance of OpenAIClient for use with an Azure OpenAI resource.
            </summary>
            </summary>
            <param name="endpoint">
                <param name="endpoint">
                The URI for an Azure OpenAI resource as retrieved from, for example, Azure Portal.
                This should include protocol and hostname. An example could be:
                https://my-resource.openai.azure.com .
            </param>
            </param>
            <param name="options">
                <param name="options"> The options for configuring the client. </param>
            </param>
            <param name="tokenCredential"> A token credential used to authenticate with an Azure OpenAI resource. </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="endpoint" /> or <paramref name="tokenCredential" /> is null.
            </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.#ctor(System.Uri,Azure.Core.TokenCredential)">
            <summary>
                <summary>
                Initializes a instance of OpenAIClient for use with an Azure OpenAI resource.
            </summary>
            </summary>
            <param name="endpoint">
                <param name="endpoint">
                The URI for an Azure OpenAI resource as retrieved from, for example, Azure Portal.
                This should include protocol and hostname. An example could be:
                https://my-resource.openai.azure.com .
            </param>
            </param>
            <param name="tokenCredential"> A token credential used to authenticate with an Azure OpenAI resource. </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="endpoint" /> or <paramref name="tokenCredential" /> is null.
            </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.#ctor(System.String,Azure.AI.OpenAI.OpenAIClientOptions)">
            <summary>
                Initializes a instance of OpenAIClient for use with the non-Azure OpenAI endpoint.
            </summary>
            <param name="openAIApiKey">
                The API key to use when connecting to the non-Azure OpenAI endpoint.
            </param>
            <param name="options"> The options for configuring the client. </param>
            <remarks>
                <see cref="T:Azure.AI.OpenAI.OpenAIClient" /> objects initialized with this constructor can only be used with the
                non-Azure OpenAI inference endpoint. To use <see cref="T:Azure.AI.OpenAI.OpenAIClient" /> with an Azure OpenAI resource,
                use a constructor that accepts a resource URI and Azure authentication credential, instead.
            </remarks>
            <exception cref="T:System.ArgumentNullException"> <paramref name="openAIApiKey" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.#ctor(System.String)">
            <summary>
                Initializes a instance of OpenAIClient for use with the non-Azure OpenAI endpoint.
            </summary>
            <param name="openAIApiKey">
                The API key to use when connecting to the non-Azure OpenAI endpoint.
            </param>
            <remarks>
                <see cref="T:Azure.AI.OpenAI.OpenAIClient" /> objects initialized with this constructor can only be used with the
                non-Azure OpenAI inference endpoint. To use <see cref="T:Azure.AI.OpenAI.OpenAIClient" /> with an Azure OpenAI resource,
                use a constructor that accepts a resource URI and Azure authentication credential, instead.
            </remarks>
            <exception cref="T:System.ArgumentNullException"> <paramref name="openAIApiKey" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.GetCompletions(System.String,Azure.AI.OpenAI.CompletionsOptions,System.Threading.CancellationToken)">
            <summary> Return textual completions as configured for a given prompt. </summary>
            <param name="deploymentOrModelName">
                Specifies either the model deployment name (when using Azure OpenAI) or model name (when using
                non-Azure OpenAI) to use for this request.
            </param>
            <param name="completionsOptions">
                The options for this completions request.
            </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="deploymentOrModelName" /> or <paramref name="completionsOptions" /> is null.
            </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.GetCompletions(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Return textual completions as configured for a given prompt. </summary>
            <param name="deploymentOrModelName">
                Specifies either the model deployment name (when using Azure OpenAI) or model name (when using
                non-Azure OpenAI) to use for this request.
            </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="deploymentOrModelName" /> or <paramref name="completionsOptions" /> is null.
            </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.GetCompletionsAsync(System.String,Azure.AI.OpenAI.CompletionsOptions,System.Threading.CancellationToken)">
            <summary> Return textual completions as configured for a given prompt. </summary>
            <param name="deploymentOrModelName">
                Specifies either the model deployment name (when using Azure OpenAI) or model name (when using
                non-Azure OpenAI) to use for this request.
            </param>
            <param name="completionsOptions">
                The options for this completions request.
            </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="deploymentOrModelName" /> or <paramref name="completionsOptions" /> is null.
            </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.GetCompletionsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Return textual completions as configured for a given prompt. </summary>
            <param name="deploymentOrModelName">
                Specifies either the model deployment name (when using Azure OpenAI) or model name (when using
                non-Azure OpenAI) to use for this request.
            </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="deploymentOrModelName" /> or <paramref name="completionsOptions" /> is null.
            </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.GetCompletionsStreaming(System.String,Azure.AI.OpenAI.CompletionsOptions,System.Threading.CancellationToken)">
            <summary>
                Begin a completions request and get an object that can stream response data as it becomes available.
            </summary>
            <param name="deploymentOrModelName">
                <param name="deploymentOrModelName">
                Specifies either the model deployment name (when using Azure OpenAI) or model name (when using
                non-Azure OpenAI) to use for this request.
            </param>
            </param>
            <param name="completionsOptions"> the chat completions options for this completions request. </param>
            <param name="cancellationToken">
                a cancellation token that can be used to cancel the initial request or ongoing streaming operation.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="deploymentOrModelName" /> or <paramref name="completionsOptions" /> is null.
            </exception>
            <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
            <returns>
            A response that, if the request was successful, includes a <see cref="T:Azure.AI.OpenAI.StreamingCompletions" /> instance.
            </returns>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.GetCompletionsStreamingAsync(System.String,Azure.AI.OpenAI.CompletionsOptions,System.Threading.CancellationToken)">
            <summary>
                Begin a completions request and get an object that can stream response data as it becomes available.
            </summary>
            <param name="deploymentOrModelName">
                <param name="deploymentOrModelName">
                Specifies either the model deployment name (when using Azure OpenAI) or model name (when using
                non-Azure OpenAI) to use for this request.
            </param>
            </param>
            <param name="completionsOptions"> the chat completions options for this completions request. </param>
            <param name="cancellationToken">
                a cancellation token that can be used to cancel the initial request or ongoing streaming operation.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="deploymentOrModelName" /> or <paramref name="completionsOptions" /> is null.
            </exception>
            <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
            <returns>
            A response that, if the request was successful, includes a <see cref="T:Azure.AI.OpenAI.StreamingCompletions" /> instance.
            </returns>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.GetChatCompletions(System.String,Azure.AI.OpenAI.ChatCompletionsOptions,System.Threading.CancellationToken)">
            <summary> Get chat completions for provided chat context messages. </summary>
            <param name="deploymentOrModelName">
            <param name="deploymentOrModelName">
                Specifies either the model deployment name (when using Azure OpenAI) or model name (when using
                non-Azure OpenAI) to use for this request.
            </param>
            </param>
            <param name="chatCompletionsOptions"> The options for this chat completions request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="deploymentOrModelName" /> or <paramref name="chatCompletionsOptions" /> is null.
            </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.GetChatCompletionsAsync(System.String,Azure.AI.OpenAI.ChatCompletionsOptions,System.Threading.CancellationToken)">
            <summary> Get chat completions for provided chat context messages. </summary>
            <param name="deploymentOrModelName">
            <param name="deploymentOrModelName">
                Specifies either the model deployment name (when using Azure OpenAI) or model name (when using
                non-Azure OpenAI) to use for this request.
            </param>
            </param>
            <param name="chatCompletionsOptions"> The options for this chat completions request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="deploymentOrModelName" /> or <paramref name="chatCompletionsOptions" /> is null.
            </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.GetChatCompletionsStreaming(System.String,Azure.AI.OpenAI.ChatCompletionsOptions,System.Threading.CancellationToken)">
            <summary>
                Begin a chat completions request and get an object that can stream response data as it becomes
                available.
            </summary>
            <param name="deploymentOrModelName">
                <param name="deploymentOrModelName">
                Specifies either the model deployment name (when using Azure OpenAI) or model name (when using
                non-Azure OpenAI) to use for this request.
            </param>
            </param>
            <param name="chatCompletionsOptions">
                the chat completions options for this chat completions request.
            </param>
            <param name="cancellationToken">
                a cancellation token that can be used to cancel the initial request or ongoing streaming operation.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="deploymentOrModelName" /> or <paramref name="chatCompletionsOptions" /> is null.
            </exception>
            <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.GetChatCompletionsStreamingAsync(System.String,Azure.AI.OpenAI.ChatCompletionsOptions,System.Threading.CancellationToken)">
            <summary>
                Begin a chat completions request and get an object that can stream response data as it becomes
                available.
            </summary>
            <param name="deploymentOrModelName">
                <param name="deploymentOrModelName">
                Specifies either the model deployment name (when using Azure OpenAI) or model name (when using
                non-Azure OpenAI) to use for this request.
            </param>
            </param>
            <param name="chatCompletionsOptions">
                the chat completions options for this chat completions request.
            </param>
            <param name="cancellationToken">
                a cancellation token that can be used to cancel the initial request or ongoing streaming operation.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="deploymentOrModelName" /> or <paramref name="chatCompletionsOptions" /> is null.
            </exception>
            <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.GetEmbeddings(System.String,Azure.AI.OpenAI.EmbeddingsOptions,System.Threading.CancellationToken)">
            <summary> Return the computed embeddings for a given prompt. </summary>
            <param name="deploymentOrModelName">
                <param name="deploymentOrModelName">
                Specifies either the model deployment name (when using Azure OpenAI) or model name (when using
                non-Azure OpenAI) to use for this request.
            </param>
            </param>
            <param name="embeddingsOptions"> The options for this embeddings request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="deploymentOrModelName" /> or <paramref name="embeddingsOptions" /> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="deploymentOrModelName" /> is an empty string and was expected to be non-empty.
            </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.GetEmbeddingsAsync(System.String,Azure.AI.OpenAI.EmbeddingsOptions,System.Threading.CancellationToken)">
            <summary> Return the computed embeddings for a given prompt. </summary>
            <param name="deploymentOrModelName">
                <param name="deploymentOrModelName">
                Specifies either the model deployment name (when using Azure OpenAI) or model name (when using
                non-Azure OpenAI) to use for this request.
            </param>
            </param>
            <param name="embeddingsOptions"> The options for this embeddings request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="deploymentOrModelName" /> or <paramref name="embeddingsOptions" /> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="deploymentOrModelName" /> is an empty string and was expected to be non-empty.
            </exception>
        </member>
        <member name="P:Azure.AI.OpenAI.OpenAIClient.ClientDiagnostics">
            <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.OpenAIClient.Pipeline">
            <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClient.#ctor">
            <summary> Initializes a new instance of OpenAIClient for mocking. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.StreamingChatChoice.Index">
            <summary>
            Gets the response index associated with this StreamingChoice as represented relative to other Choices
            in the same Completions response.
            </summary>
            <remarks>
            Indices may be used to correlate individual Choices within a Completions result to their configured
            prompts as provided in the request. As an example, if two Choices are requested for each of four prompts,
            the Choices with indices 0 and 1 will correspond to the first prompt, 2 and 3 to the second, and so on.
            </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.StreamingChatChoice.FinishReason">
            <summary>
            Gets a value representing why response generation ended when producing this StreamingChoice.
            </summary>
            <remarks>
            Normal termination typically provides "stop" and encountering token limits in a request typically
            provides "length." If no value is present, this StreamingChoice is still in progress.
            </remarks>
        </member>
        <member name="M:Azure.AI.OpenAI.StreamingChatChoice.GetMessageStreaming(System.Threading.CancellationToken)">
            <summary>
            Gets an asynchronous enumeration that will retrieve the Completion text associated with this Choice as it
            becomes available. Each string will provide one or more tokens, including whitespace, and a full
            concatenation of all enumerated strings is functionally equivalent to the single Text property on a
            non-streaming Completions Choice.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="P:Azure.AI.OpenAI.StreamingChatCompletions.Created">
            <summary>
            Gets the earliest Completion creation timestamp associated with this streamed response.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.StreamingChatCompletions.Id">
            <summary>
            Gets the unique identifier associated with this streaming Completions response.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.StreamingChoice.Index">
            <summary>
            Gets the response index associated with this StreamingChoice as represented relative to other Choices
            in the same Completions response.
            </summary>
            <remarks>
            Indices may be used to correlate individual Choices within a Completions result to their configured
            prompts as provided in the request. As an example, if two Choices are requested for each of four prompts,
            the Choices with indices 0 and 1 will correspond to the first prompt, 2 and 3 to the second, and so on.
            </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.StreamingChoice.FinishReason">
            <summary>
            Gets a value representing why response generation ended when producing this StreamingChoice.
            </summary>
            <remarks>
            Normal termination typically provides "stop" and encountering token limits in a request typically
            provides "length." If no value is present, this StreamingChoice is still in progress.
            </remarks>
        </member>
        <member name="P:Azure.AI.OpenAI.StreamingChoice.Logprobs">
            <summary>
            Gets the log probabilities associated with tokens in this Choice.
            </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.StreamingChoice.GetTextStreaming(System.Threading.CancellationToken)">
            <summary>
            Gets an asynchronous enumeration that will retrieve the Completion text associated with this Choice as it
            becomes available. Each string will provide one or more tokens, including whitespace, and a full
            concatenation of all enumerated strings is functionally equivalent to the single Text property on a
            non-streaming Completions Choice.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="P:Azure.AI.OpenAI.StreamingCompletions.Created">
            <summary>
            Gets the earliest Completion creation timestamp associated with this streamed response.
            </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.StreamingCompletions.Id">
            <summary>
            Gets the unique identifier associated with this streaming Completions response.
            </summary>
        </member>
        <member name="T:Azure.AI.OpenAI.Completions">
            <summary> Expected response schema to completion request. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.Completions.#ctor(Azure.AI.OpenAI.CompletionsUsage)">
            <summary> Initializes a new instance of Completions. </summary>
            <param name="usage"> Usage counts for tokens input using the completions API. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="usage" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.Completions.#ctor(System.String,System.Nullable{System.Int32},System.String,System.Collections.Generic.IReadOnlyList{Azure.AI.OpenAI.Choice},Azure.AI.OpenAI.CompletionsUsage)">
            <summary> Initializes a new instance of Completions. </summary>
            <param name="id"> Id for completion response. </param>
            <param name="created"> Created time for completion response. </param>
            <param name="model"> Model used for completion response. </param>
            <param name="choices"> Array of choices returned containing text completions to prompts sent. </param>
            <param name="usage"> Usage counts for tokens input using the completions API. </param>
        </member>
        <member name="P:Azure.AI.OpenAI.Completions.Id">
            <summary> Id for completion response. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.Completions.Object">
            <summary> Object for completion response. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.Completions.Created">
            <summary> Created time for completion response. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.Completions.Model">
            <summary> Model used for completion response. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.Completions.Choices">
            <summary> Array of choices returned containing text completions to prompts sent. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.Completions.Usage">
            <summary> Usage counts for tokens input using the completions API. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.Completions.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.AI.OpenAI.EmbeddingItem">
            <summary> Expected response schema to embeddings object list item request. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.EmbeddingItem.#ctor(System.Collections.Generic.IEnumerable{System.Single},System.Int32)">
            <summary> Initializes a new instance of EmbeddingItem. </summary>
            <param name="embedding"> List of embeddings value for the input prompt. These represents a measurement of releated of text strings. </param>
            <param name="index"> Index of the prompt to which the EmbeddingItem corresponds. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="embedding" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.EmbeddingItem.#ctor(System.Collections.Generic.IReadOnlyList{System.Single},System.Int32)">
            <summary> Initializes a new instance of EmbeddingItem. </summary>
            <param name="embedding"> List of embeddings value for the input prompt. These represents a measurement of releated of text strings. </param>
            <param name="index"> Index of the prompt to which the EmbeddingItem corresponds. </param>
        </member>
        <member name="P:Azure.AI.OpenAI.EmbeddingItem.Object">
            <summary> Name of the field in which the embedding is contained. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.EmbeddingItem.Embedding">
            <summary> List of embeddings value for the input prompt. These represents a measurement of releated of text strings. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.EmbeddingItem.Index">
            <summary> Index of the prompt to which the EmbeddingItem corresponds. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.EmbeddingItem.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.AI.OpenAI.Embeddings">
            <summary> Expected response schema to embeddings request. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.Embeddings.#ctor(System.Collections.Generic.IEnumerable{Azure.AI.OpenAI.EmbeddingItem},Azure.AI.OpenAI.EmbeddingsUsage)">
            <summary> Initializes a new instance of Embeddings. </summary>
            <param name="data"> Embedding values for the prompts submitted in the request. </param>
            <param name="usage"> Usage counts for tokens input using the embeddings API. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> or <paramref name="usage" /> is null. </exception>
        </member>
        <member name="M:Azure.AI.OpenAI.Embeddings.#ctor(System.Collections.Generic.IReadOnlyList{Azure.AI.OpenAI.EmbeddingItem},System.String,Azure.AI.OpenAI.EmbeddingsUsage)">
            <summary> Initializes a new instance of Embeddings. </summary>
            <param name="data"> Embedding values for the prompts submitted in the request. </param>
            <param name="model"> ID of the model to use. </param>
            <param name="usage"> Usage counts for tokens input using the embeddings API. </param>
        </member>
        <member name="P:Azure.AI.OpenAI.Embeddings.Object">
            <summary> Type of the data field. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.Embeddings.Data">
            <summary> Embedding values for the prompts submitted in the request. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.Embeddings.Model">
            <summary> ID of the model to use. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.Embeddings.Usage">
            <summary> Usage counts for tokens input using the embeddings API. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.Embeddings.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.AI.OpenAI.EmbeddingsUsage">
            <summary> Measurment of the amount of tokens used in this request and response. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.EmbeddingsUsage.#ctor(System.Int32,System.Int32)">
            <summary> Initializes a new instance of EmbeddingsUsage. </summary>
            <param name="promptTokens"> Number of tokens sent in the original request. </param>
            <param name="totalTokens"> Total number of tokens transacted in this request/response. </param>
        </member>
        <member name="P:Azure.AI.OpenAI.EmbeddingsUsage.PromptTokens">
            <summary> Number of tokens sent in the original request. </summary>
        </member>
        <member name="P:Azure.AI.OpenAI.EmbeddingsUsage.TotalTokens">
            <summary> Total number of tokens transacted in this request/response. </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.EmbeddingsUsage.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.AI.OpenAI.OpenAIClientOptions">
            <summary> Client options for OpenAIClient. </summary>
        </member>
        <member name="T:Azure.AI.OpenAI.OpenAIClientOptions.ServiceVersion">
            <summary> The version of the service to use. </summary>
        </member>
        <member name="F:Azure.AI.OpenAI.OpenAIClientOptions.ServiceVersion.V2022_12_01">
            <summary> Service version "2022-12-01". </summary>
        </member>
        <member name="F:Azure.AI.OpenAI.OpenAIClientOptions.ServiceVersion.V2023_03_15_Preview">
            <summary> Service version "2023-03-15-preview". </summary>
        </member>
        <member name="M:Azure.AI.OpenAI.OpenAIClientOptions.#ctor(Azure.AI.OpenAI.OpenAIClientOptions.ServiceVersion)">
            <summary> Initializes new instance of OpenAIClientOptions. </summary>
        </member>
        <member name="T:Azure.Core.ArrayBufferWriter`1">
            <summary>
            Represents a heap-based, array-backed output sink into which <typeparam name="T" /> data can be written.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.#ctor">
            <summary>
            Creates an instance of an <see cref="T:Azure.Core.ArrayBufferWriter`1" />, in which data can be written to,
            with the default initial capacity.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.#ctor(System.Int32)">
            <summary>
            Creates an instance of an <see cref="T:Azure.Core.ArrayBufferWriter`1" />, in which data can be written to,
            with an initial capacity specified.
            </summary>
            <param name="initialCapacity">The minimum capacity with which to initialize the underlying buffer.</param>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="initialCapacity" /> is not positive (i.e. less than or equal to 0).
            </exception>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenMemory">
            <summary>
            Returns the data written to the underlying buffer so far, as a <see cref="T:System.ReadOnlyMemory`1" />.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenSpan">
            <summary>
            Returns the data written to the underlying buffer so far, as a <see cref="T:System.ReadOnlySpan`1" />.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenCount">
            <summary>
            Returns the amount of data written to the underlying buffer so far.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.Capacity">
            <summary>
            Returns the total amount of space within the underlying buffer.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.FreeCapacity">
            <summary>
            Returns the amount of space available that can still be written into without forcing the underlying buffer to grow.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.Clear">
            <summary>
            Clears the data written to the underlying buffer.
            </summary>
            <remarks>
            You must clear the <see cref="T:Azure.Core.ArrayBufferWriter`1" /> before trying to re-use it.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.Advance(System.Int32)">
            <summary>
            Notifies <see cref="T:System.Buffers.IBufferWriter`1" /> that <paramref name="count" /> amount of data was written to the output <see cref="T:System.Span`1" />/<see cref="T:System.Memory`1" />.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="count" /> is negative.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown when attempting to advance past the end of the underlying buffer.
            </exception>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.GetMemory(System.Int32)">
            <summary>
            Returns a <see cref="T:System.Memory`1" /> to write to that is at least the requested length (specified by <paramref name="sizeHint" />).
            If no <paramref name="sizeHint" /> is provided (or it's equal to <code>0</code>), some non-empty buffer is returned.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="sizeHint" /> is negative.
            </exception>
            <remarks>
            This will never return an empty <see cref="T:System.Memory`1" />.
            </remarks>
            <remarks>
            There is no guarantee that successive calls will return the same buffer or the same-sized buffer.
            </remarks>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.GetSpan(System.Int32)">
            <summary>
            Returns a <see cref="T:System.Span`1" /> to write to that is at least the requested length (specified by <paramref name="sizeHint" />).
            If no <paramref name="sizeHint" /> is provided (or it's equal to <code>0</code>), some non-empty buffer is returned.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="sizeHint" /> is negative.
            </exception>
            <remarks>
            This will never return an empty <see cref="T:System.Span`1" />.
            </remarks>
            <remarks>
            There is no guarantee that successive calls will return the same buffer or the same-sized buffer.
            </remarks>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="M:Azure.Core.AzureKeyCredentialPolicy.#ctor(Azure.AzureKeyCredential,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.AzureKeyCredentialPolicy" /> class.
            </summary>
            <param name="credential">The <see cref="T:Azure.AzureKeyCredential" /> used to authenticate requests.</param>
            <param name="name">The name of the key header used for the credential.</param>
        </member>
        <member name="M:Azure.Core.AzureKeyCredentialPolicy.OnSendingRequest(Azure.Core.HttpMessage)">
            <summary>
            Method is invoked before the request is sent.
            </summary><param name="message">The <see cref="T:Azure.Core.HttpMessage" /> containing the request.</param>
        </member>
        <member name="T:Azure.Core.AzureResourceProviderNamespaceAttribute">
            <summary>
            This attribute should be set on all client assemblies with value of one of the resource providers
            from the https://docs.microsoft.com/azure/azure-resource-manager/management/azure-services-resource-providers list.
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenModelAttribute.Usage">
            <summary>
            Gets or sets a coma separated list of additional model usage modes. Allowed values: model, error, intput, output.
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenModelAttribute.Formats">
            <summary>
            Gets or sets a coma separated list of additional model serialization formats.
            </summary>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.Id">
            <summary>
            Gets an ID representing the operation that can be used to poll for
            the status of the long-running operation.
            </summary>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.Value">
            <summary>
            Final result of the long-running operation.
            </summary><remarks>
            This property can be accessed only after the operation completes successfully (HasValue is true).
            </remarks>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.HasCompleted">
            <summary>
            Returns true if the long-running operation completed.
            </summary>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.HasValue">
            <summary>
            Returns true if the long-running operation completed successfully and has produced final result (accessible by Value property).
            </summary>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.GetRawResponse">
            <summary>
            The last HTTP response received from the server.
            </summary><remarks>
            The last response returned from the server during the lifecycle of this instance.
            An instance of <see cref="T:Azure.Operation`1" /> sends requests to a server in UpdateStatusAsync, UpdateStatus, and other methods.
            Responses from these requests can be accessed using GetRawResponse.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="T:Azure.Core.AsyncLockWithValue`1">
            <summary>
            Primitive that combines async lock and value cache
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Azure.Core.AsyncLockWithValue`1.GetLockOrValueAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Method that either returns cached value or acquire a lock.
            If one caller has acquired a lock, other callers will be waiting for the lock to be released.
            If value is set, lock is released and all waiters get that value.
            If value isn't set, the next waiter in the queue will get the lock.
            </summary>
            <param name="async"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="P:Azure.Core.AsyncLockWithValue`1.LockOrValue.HasValue">
            <summary>
            Returns true if lock contains the cached value. Otherwise false.
            </summary>
        </member>
        <member name="P:Azure.Core.AsyncLockWithValue`1.LockOrValue.Value">
            <summary>
            Returns cached value if it was set when lock has been created. Throws exception otherwise.
            </summary>
            <exception cref="T:System.InvalidOperationException">Value isn't set.</exception>
        </member>
        <member name="M:Azure.Core.AsyncLockWithValue`1.LockOrValue.SetValue(`0)">
            <summary>
            Set value to the cache and to all the waiters.
            </summary>
            <param name="value"></param>
            <exception cref="T:System.InvalidOperationException">Value is set already.</exception>
        </member>
        <member name="T:Azure.Core.OperationInternal">
            <summary>
            A helper class used to build long-running operation instances. In order to use this helper:
            <list type="number">
              <item>Make sure your LRO implements the <see cref="T:Azure.Core.IOperation" /> interface.</item>
              <item>Add a private <see cref="T:Azure.Core.OperationInternal" /> field to your LRO, and instantiate it during construction.</item>
              <item>Delegate method calls to the <see cref="T:Azure.Core.OperationInternal" /> implementations.</item>
            </list>
            Supported members:
            <list type="bullet">
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.HasCompleted" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.RawResponse" />, used for <see cref="M:Azure.Operation.GetRawResponse" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.TimeSpan,System.Threading.CancellationToken)" /></description>
              </item>
            </list>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationInternal.Succeeded(Azure.Response)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final successful state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal.Failed(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final failed state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="operationFailedException">The exception that will be thrown by <c>UpdateStatusAsync</c>.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal.#ctor(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.IOperation,Azure.Response,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},Azure.Core.DelayStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class.
            </summary>
            <param name="clientDiagnostics">Used for diagnostic scope and exception creation. This is expected to be the instance created during the construction of your main client.</param>
            <param name="operation">The long-running operation making use of this class. Passing "<c>this</c>" is expected.</param>
            <param name="rawResponse">
            The initial value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />. Usually, long-running operation objects can be instantiated in two ways:
            <list type="bullet">
              <item>
              When calling a client's "<c>Start&lt;OperationName&gt;</c>" method, a service call is made to start the operation, and an <see cref="T:Azure.Operation" /> instance is returned.
              In this case, the response received from this service call can be passed here.
              </item>
              <item>
              When a user instantiates an <see cref="T:Azure.Operation" /> directly using a public constructor, there's no previous service call. In this case, passing <c>null</c> is expected.
              </item>
            </list>
            </param>
            <param name="operationTypeName">
            The type name of the long-running operation making use of this class. Used when creating diagnostic scopes. If left <c>null</c>, the type name will be inferred based on the
            parameter <paramref name="operation" />.
            </param>
            <param name="scopeAttributes">The attributes to use during diagnostic scope creation.</param>
            <param name="fallbackStrategy">The fallback delay strategy when Retry-After header is not present.  When it is present, the longer of the two delays will be used. Default is <see cref="T:Azure.Core.ConstantDelayStrategy" />.</param>
        </member>
        <member name="T:Azure.Core.IOperation">
            <summary>
            An interface used by <see cref="T:Azure.Core.OperationInternal" /> for making service calls and updating state. It's expected that
            your long-running operation classes implement this interface.
            </summary>
        </member>
        <member name="M:Azure.Core.IOperation.UpdateStateAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Calls the service and updates the state of the long-running operation. Properties directly handled by the
            <see cref="T:Azure.Core.OperationInternal" /> class, such as <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />
            don't need to be updated. Operation-specific properties, such as "<c>CreateOn</c>" or "<c>LastModified</c>",
            must be manually updated by the operation implementing this method.
            <example>Usage example:
            <code>
              async ValueTask&lt;OperationState&gt; IOperation.UpdateStateAsync(bool async, CancellationToken cancellationToken)<br />
              {<br />
                Response&lt;R&gt; response = async ? &lt;async service call&gt; : &lt;sync service call&gt;;<br />
                if (&lt;operation succeeded&gt;) return OperationState.Success(response.GetRawResponse(), &lt;parse response&gt;);<br />
                if (&lt;operation failed&gt;) return OperationState.Failure(response.GetRawResponse());<br />
                return OperationState.Pending(response.GetRawResponse());<br />
              }
            </code>
            </example>
            </summary>
            <param name="async"><c>true</c> if the call should be executed asynchronously. Otherwise, <c>false</c>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>
            A structure indicating the current operation state. The <see cref="T:Azure.Core.OperationState" /> structure must be instantiated by one of
            its static methods:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState.Success(Azure.Response)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </returns>
        </member>
        <member name="T:Azure.Core.OperationState">
            <summary>
            A helper structure passed to <see cref="T:Azure.Core.OperationInternal" /> to indicate the current operation state. This structure must be
            instantiated by one of its static methods, depending on the operation state:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState.Success(Azure.Response)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationState.Success(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has completed successfully.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has completed with failures.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="operationFailedException">
            The exception to throw from <c>UpdateStatus</c> because of the operation failure. If left <c>null</c>,
            a default exception is created based on the <paramref name="rawResponse" /> parameter.
            </param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState.Pending(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has not completed yet.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="P:Azure.Core.OperationInternalBase.RawResponse">
            <summary>
            The last HTTP response received from the server. Its update already handled in calls to "<c>UpdateStatus</c>" and
            "<c>WaitForCompletionAsync</c>", but custom methods not supported by this class, such as "<c>CancelOperation</c>",
            must update it as well.
            <example>Usage example:
            <code>
              public Response GetRawResponse() =&gt; _operationInternal.RawResponse;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:Azure.Core.OperationInternalBase.HasCompleted">
            <summary>
            Returns <c>true</c> if the long-running operation has completed.
            <example>Usage example:
            <code>
              public bool HasCompleted =&gt; _operationInternal.HasCompleted;
            </code>
            </example>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get the latest status of the long-running operation, handling diagnostic scope creation for distributed
            tracing. The default scope name can be changed with the "<c>operationTypeName</c>" parameter passed to the constructor.
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&gt; UpdateStatusAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.UpdateStatusAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The HTTP response received from the server.</returns>
            <remarks>
            After a successful run, this method will update <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> and might update <see cref="P:Azure.Core.OperationInternalBase.HasCompleted" />.
            </remarks>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get the latest status of the long-running operation, handling diagnostic scope creation for distributed
            tracing. The default scope name can be changed with the "<c>operationTypeName</c>" parameter passed to the constructor.
            <example>Usage example:
            <code>
              public Response UpdateStatus(CancellationToken cancellationToken) =&gt; _operationInternal.UpdateStatus(cancellationToken);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The HTTP response received from the server.</returns>
            <remarks>
            After a successful run, this method will update <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> and might update <see cref="P:Azure.Core.OperationInternalBase.HasCompleted" />.
            </remarks>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback <see cref="T:Azure.Core.DelayStrategy" />
            is then used as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server. <strong></strong></param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponse(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback <see cref="T:Azure.Core.DelayStrategy" />
            is then used as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponse(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="T:Azure.Core.OperationInternal`1">
            <summary>
            A helper class used to build long-running operation instances. In order to use this helper:
            <list type="number">
              <item>Make sure your LRO implements the <see cref="T:Azure.Core.IOperation`1" /> interface.</item>
              <item>Add a private <see cref="T:Azure.Core.OperationInternal`1" /> field to your LRO, and instantiate it during construction.</item>
              <item>Delegate method calls to the <see cref="T:Azure.Core.OperationInternal`1" /> implementations.</item>
            </list>
            Supported members:
            <list type="bullet">
              <item>
                <description><see cref="P:Azure.Core.OperationInternal`1.HasValue" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.HasCompleted" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternal`1.Value" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.RawResponse" />, used for <see cref="M:Azure.Operation.GetRawResponse" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)" /></description>
              </item>
            </list>
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.Succeeded(Azure.Response,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final successful state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="value">The final result of the long-running operation.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.Failed(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final failed state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="operationFailedException">The exception that will be thrown by <c>UpdateStatusAsync</c>.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.#ctor(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.IOperation{`0},Azure.Response,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},Azure.Core.DelayStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal`1" /> class.
            </summary>
            <param name="clientDiagnostics">Used for diagnostic scope and exception creation. This is expected to be the instance created during the construction of your main client.</param>
            <param name="operation">The long-running operation making use of this class. Passing "<c>this</c>" is expected.</param>
            <param name="rawResponse">
            The initial value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />. Usually, long-running operation objects can be instantiated in two ways:
            <list type="bullet">
              <item>
              When calling a client's "<c>Start&lt;OperationName&gt;</c>" method, a service call is made to start the operation, and an <see cref="T:Azure.Operation`1" /> instance is returned.
              In this case, the response received from this service call can be passed here.
              </item>
              <item>
              When a user instantiates an <see cref="T:Azure.Operation`1" /> directly using a public constructor, there's no previous service call. In this case, passing <c>null</c> is expected.
              </item>
            </list>
            </param>
            <param name="operationTypeName">
            The type name of the long-running operation making use of this class. Used when creating diagnostic scopes. If left <c>null</c>, the type name will be inferred based on the
            parameter <paramref name="operation" />.
            </param>
            <param name="scopeAttributes">The attributes to use during diagnostic scope creation.</param>
            <param name="fallbackStrategy">The fallback delay strategy when Retry-After header is not present.  When it is present, the longer of the two delays will be used. Default is <see cref="T:Azure.Core.ConstantDelayStrategy" />.</param>
        </member>
        <member name="P:Azure.Core.OperationInternal`1.HasValue">
            <summary>
            Returns <c>true</c> if the long-running operation completed successfully and has produced a final result.
            <example>Usage example:
            <code>
              public bool HasValue =&gt; _operationInternal.HasValue;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:Azure.Core.OperationInternal`1.Value">
            <summary>
            The final result of the long-running operation.
            <example>Usage example:
            <code>
              public T Value =&gt; _operationInternal.Value;
            </code>
            </example>
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation has not completed yet.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback <see cref="T:Azure.Core.DelayStrategy" />
            is then used as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletion(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback <see cref="T:Azure.Core.DelayStrategy" />
            is then use as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletion(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the property <see cref="F:Azure.Core.ConstantDelayStrategy.DefaultPollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <see cref="F:Azure.Core.ConstantDelayStrategy.DefaultPollingInterval" />
            property and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="T:Azure.Core.IOperation`1">
            <summary>
            An interface used by <see cref="T:Azure.Core.OperationInternal`1" /> for making service calls and updating state. It's expected that
            your long-running operation classes implement this interface.
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.IOperation`1.UpdateStateAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Calls the service and updates the state of the long-running operation. Properties directly handled by the
            <see cref="T:Azure.Core.OperationInternal`1" /> class, such as <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> or
            <see cref="P:Azure.Core.OperationInternal`1.Value" />, don't need to be updated. Operation-specific properties, such
            as "<c>CreateOn</c>" or "<c>LastModified</c>", must be manually updated by the operation implementing this
            method.
            <example>Usage example:
            <code>
              async ValueTask&lt;OperationState&lt;T&gt;&gt; IOperation&lt;T&gt;.UpdateStateAsync(bool async, CancellationToken cancellationToken)<br />
              {<br />
                Response&lt;R&gt; response = async ? &lt;async service call&gt; : &lt;sync service call&gt;;<br />
                if (&lt;operation succeeded&gt;) return OperationState&lt;T&gt;.Success(response.GetRawResponse(), &lt;parse response&gt;);<br />
                if (&lt;operation failed&gt;) return OperationState&lt;T&gt;.Failure(response.GetRawResponse());<br />
                return OperationState&lt;T&gt;.Pending(response.GetRawResponse());<br />
              }
            </code>
            </example>
            </summary>
            <param name="async"><c>true</c> if the call should be executed asynchronously. Otherwise, <c>false</c>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>
            A structure indicating the current operation state. The <see cref="T:Azure.Core.OperationState`1" /> structure must be instantiated by one of
            its static methods:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </returns>
        </member>
        <member name="T:Azure.Core.OperationState`1">
            <summary>
            A helper structure passed to <see cref="T:Azure.Core.OperationInternal`1" /> to indicate the current operation state. This structure must be
            instantiated by one of its static methods, depending on the operation state:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has completed successfully.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="value">The final result of the long-running operation.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> or <paramref name="value" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has completed with failures.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="operationFailedException">
            The exception to throw from <c>UpdateStatus</c> because of the operation failure. The same exception will be thrown when
            <see cref="P:Azure.Core.OperationInternal`1.Value" /> is called. If left <c>null</c>, a default exception is created based on the
            <paramref name="rawResponse" /> parameter.
            </param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState`1.Pending(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has not completed yet.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="T:Azure.Core.DelayStrategy">
            <summary>
            Strategy to control delay behavior.
            </summary>
        </member>
        <member name="M:Azure.Core.DelayStrategy.GetNextDelay(Azure.Response,System.Nullable{System.TimeSpan})">
            <summary>
            Get the interval of next delay iteration.
            </summary>
            <remarks> Note that the value could change per call. </remarks>
            <param name="response"> Server response. </param>
            <param name="suggestedInterval"> Suggested pollingInterval. It is up to strategy
            implementation to decide how to deal with this parameter. </param>
            <returns> Delay interval of next iteration. </returns>
        </member>
        <member name="T:Azure.Core.ConstantDelayStrategy">
            <summary>
            Implementation of a <see cref="T:Azure.Core.DelayStrategy" /> with constant polling interval.
            </summary>
            <remarks>Polling interval is always equal to the given polling interval.</remarks>
        </member>
        <member name="M:Azure.Core.ConstantDelayStrategy.GetNextDelay(Azure.Response,System.Nullable{System.TimeSpan})">
            <summary>
            Get the polling interval from the max value of <see cref="F:Azure.Core.ConstantDelayStrategy.DefaultPollingInterval" /> and <paramref name="suggestedInterval" />.
            </summary>
            <param name="response">Service response.</param>
            <param name="suggestedInterval">Suggested pollingInterval.</param>
            <returns>Max value of <see cref="F:Azure.Core.ConstantDelayStrategy.DefaultPollingInterval" /> and <paramref name="suggestedInterval" />.</returns>
        </member>
        <member name="T:Azure.Core.ExponentialDelayStrategy">
            <summary>
            Implementation of a <see cref="T:Azure.Core.DelayStrategy" />. Polling interval changes according to
            the sequence {1, 1, 1, 2, 4, ...32}.
            </summary>
            <remarks>Polling interval always follows the given sequence.</remarks>
        </member>
        <member name="M:Azure.Core.ExponentialDelayStrategy.GetNextDelay(Azure.Response,System.Nullable{System.TimeSpan})">
            <summary>
            Get the polling interval from {1, 1, 1, 2, 4, ...32}.
            </summary>
            <param name="response">Service response.</param>
            <param name="suggestedInterval">Suggested pollingInterval.</param>
        </member>
        <member name="T:Azure.Core.RetryAfterDelayStrategy">
            <summary>
            Implementation of a <see cref="T:Azure.Core.DelayStrategy" /> of which the interval is from
            retry-after header of service response.
            </summary>
        </member>
        <member name="M:Azure.Core.RetryAfterDelayStrategy.#ctor(Azure.Core.DelayStrategy)">
            <summary>
            Create a <see cref="T:Azure.Core.RetryAfterDelayStrategy" /> with a default retry-after value which normally
            comes from the initial response of an LRO operation.
            </summary>
            <param name="fallbackStrategy"> Fallback strategy if retry after is not present. </param>
        </member>
        <member name="M:Azure.Core.RetryAfterDelayStrategy.GetNextDelay(Azure.Response,System.Nullable{System.TimeSpan})">
            <summary>
            Get the polling interval from the max value of retry-after header of given service response and <paramref name="suggestedInterval" />.
            If retry-after header is not found, adopt the value of last retry-after header.
            </summary>
            <param name="response">Service response which might carry retry-after header.</param>
            <param name="suggestedInterval">Suggested pollingInterval.</param>
            <returns>Max value of retry-after header and <paramref name="suggestedInterval" />.</returns>
        </member>
        <member name="T:Azure.Core.OperationPoller">
            <summary>
            Implementation of LRO polling logic.
            </summary>
        </member>
        <member name="M:Azure.Core.Pipeline.ClientDiagnostics.#ctor(Azure.Core.ClientOptions,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> class.
            </summary>
            <param name="options">The customer provided client options object.</param>
            <param name="suppressNestedClientActivities">Flag controlling if <see cref="T:System.Diagnostics.Activity" />
             created by this <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> for client method calls should be suppressed when called
             by other Azure SDK client methods.  It's recommended to set it to true for new clients; use default (null)
             for backward compatibility reasons, or set it to false to explicitly disable suppression for specific cases.
             The default value could change in the future, the flag should be only set to false if suppression for the client
             should never be enabled.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.ClientDiagnostics.#ctor(System.String,System.String,Azure.Core.DiagnosticsOptions,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> class.
            </summary>
            <param name="optionsNamespace">Namespace of the client class, such as Azure.Storage or Azure.AppConfiguration.</param>
            <param name="providerNamespace">Azure Resource Provider namespace of the Azure service SDK is primarily used for.</param>
            <param name="diagnosticsOptions">The customer provided client diagnostics options.</param>
            <param name="suppressNestedClientActivities">Flag controlling if <see cref="T:System.Diagnostics.Activity" />
             created by this <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> for client method calls should be suppressed when called
             by other Azure SDK client methods.  It's recommended to set it to true for new clients, use default (null) for old clients
             for backward compatibility reasons, or set it to false to explicitly disable suppression for specific cases.
             The default value could change in the future, the flag should be only set to false if suppression for the client
             should never be enabled.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScope.AddLink(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Adds a link to the scope. This must be called before <see cref="M:Azure.Core.Pipeline.DiagnosticScope.Start" /> has been called for the DiagnosticScope.
            </summary>
            <param name="traceparent">The traceparent for the link.</param>
            <param name="tracestate">The tracestate for the link.</param>
            <param name="attributes">Optional attributes to associate with the link.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScope.SetTraceContext(System.String,System.String)">
            <summary>
            Sets the trace context for the current scope.
            </summary>
            <param name="traceparent">The trace parent to set for the current scope.</param>
            <param name="tracestate">The trace state to set for the current scope.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScope.Failed(System.Exception)">
            <summary>
            Marks the scope as failed.
            </summary>
            <param name="exception">The exception to associate with the failed scope.</param>
        </member>
        <member name="T:Azure.Core.Pipeline.DiagnosticScope.ActivityKind">
            <summary>
            Kind describes the relationship between the Activity, its parents, and its children in a Trace.
            </summary>
        </member>
        <member name="F:Azure.Core.Pipeline.DiagnosticScope.ActivityKind.Internal">
            <summary>
            Default value.
            Indicates that the Activity represents an internal operation within an application, as opposed to an operations with remote parents or children.
            </summary>
        </member>
        <member name="F:Azure.Core.Pipeline.DiagnosticScope.ActivityKind.Server">
            <summary>
            Server activity represents request incoming from external component.
            </summary>
        </member>
        <member name="F:Azure.Core.Pipeline.DiagnosticScope.ActivityKind.Client">
            <summary>
            Client activity represents outgoing request to the external component.
            </summary>
        </member>
        <member name="F:Azure.Core.Pipeline.DiagnosticScope.ActivityKind.Producer">
            <summary>
            Producer activity represents output provided to external components.
            </summary>
        </member>
        <member name="F:Azure.Core.Pipeline.DiagnosticScope.ActivityKind.Consumer">
            <summary>
            Consumer activity represents output received from an external component.
            </summary>
        </member>
        <member name="T:Azure.Core.Pipeline.ActivityExtensions">
            <summary>
            Until we can reference the 5.0 of System.Diagnostics.DiagnosticSource
            </summary>
        </member>
        <member name="T:Azure.Core.Pipeline.TaskExtensions.Enumerable`1">
            <summary>
            Both <see cref="T:Azure.Core.Pipeline.TaskExtensions.Enumerable`1" /> and <see cref="T:Azure.Core.Pipeline.TaskExtensions.Enumerator`1" /> are defined as public structs so that foreach can use duck typing
            to call <see cref="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.GetEnumerator" /> and avoid heap memory allocation.
            Please don't delete this method and don't make these types private.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Azure.Core.Argument">
            <summary>
            Argument validation.
            </summary>
            <remarks>
              <para>This class should be shared via source using Azure.Core.props and contain only common argument validation.
                It is declared partial so that you can use the same familiar class name but extend it with project-specific validation.
                To extend the functionality of this class, just declare your own partial <see cref="T:Azure.Core.Argument" /> class with project-specific methods.
              </para>
              <para>
                Be sure to document exceptions thrown by these methods on your public methods.
              </para>
            </remarks>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNull``1(``0,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNull``1(System.Nullable{``0},System.String)">
            <summary>
            Throws if <paramref name="value" /> has not been initialized.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> has not been initialized.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Throws if <paramref name="value" /> is null or an empty collection.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty collection.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNullOrEmpty(System.String,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null or an empty string.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNullOrWhiteSpace(System.String,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null, an empty string, or consists only of white-space characters.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty string or consists only of white-space characters.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotDefault``1(``0@,System.String)">
            <summary>
            Throws if <paramref name="value" /> is the default value for type <typeparamref name="T" />.
            </summary>
            <typeparam name="T">The type of structure to validate which implements <see cref="T:System.IEquatable`1" />.</typeparam>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is the default value for type <typeparamref name="T" />.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertInRange``1(``0,``0,``0,System.String)">
            <summary>
            Throws if <paramref name="value" /> is less than the <paramref name="minimum" /> or greater than the <paramref name="maximum" />.
            </summary>
            <typeparam name="T">The type of to validate which implements <see cref="T:System.IComparable`1" />.</typeparam>
            <param name="value">The value to validate.</param>
            <param name="minimum">The minimum value to compare.</param>
            <param name="maximum">The maximum value to compare.</param>
            <param name="name">The name of the parameter.</param>
        </member>
        <member name="M:Azure.Core.Argument.AssertEnumDefined(System.Type,System.Object,System.String)">
            <summary>
            Throws if <paramref name="value" /> is not defined for <paramref name="enumType" />.
            </summary>
            <param name="enumType">The type to validate against.</param>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is not defined for <paramref name="enumType" />.</exception>
        </member>
        <member name="M:Azure.Core.Argument.CheckNotNull``1(``0,System.String)">
            <summary>
            Throws if <paramref name="value" /> has not been initialized; otherwise, returns <paramref name="value" />.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> has not been initialized.</exception>
        </member>
        <member name="M:Azure.Core.Argument.CheckNotNullOrEmpty(System.String,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null or an empty string; otherwise, returns <paramref name="value" />.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNull``1(``0,System.String,System.String)">
            <summary>
            Throws if <paramref name="value" /> is not null.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <param name="message">The error message.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is not null.</exception>
        </member>
        <member name="T:Azure.Core.AppContextSwitchHelper">
            <summary>
            Helper for interacting with AppConfig settings and their related Environment variable settings.
            </summary>
        </member>
        <member name="M:Azure.Core.AppContextSwitchHelper.GetConfigValue(System.String,System.String)">
            <summary>
            Determines if either an AppContext switch or its corresponding Environment Variable is set
            </summary>
            <param name="appContexSwitchName">Name of the AppContext switch.</param>
            <param name="environmentVariableName">Name of the Environment variable.</param>
            <returns>If the AppContext switch has been set, returns the value of the switch.
            If the AppContext switch has not been set, returns the value of the environment variable.
            False if neither is set.
            </returns>
        </member>
        <member name="T:Microsoft.Extensions.Azure.AzureOpenAIClientBuilderExtensions">
            <summary> Extension methods to add <see cref="T:Azure.AI.OpenAI.OpenAIClient" /> to client builder. </summary>
        </member>
        <member name="M:Microsoft.Extensions.Azure.AzureOpenAIClientBuilderExtensions.AddOpenAIClient``1(``0,System.Uri,Azure.AzureKeyCredential)">
            <summary> Registers a <see cref="T:Azure.AI.OpenAI.OpenAIClient" /> instance. </summary>
            <param name="builder"> The builder to register with. </param>
            <param name="endpoint">
            Supported Cognitive Services endpoints (protocol and hostname, for example:
            https://westus.api.cognitive.microsoft.com).
            </param>
            <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        </member>
        <member name="M:Microsoft.Extensions.Azure.AzureOpenAIClientBuilderExtensions.AddOpenAIClient``1(``0,System.Uri)">
            <summary> Registers a <see cref="T:Azure.AI.OpenAI.OpenAIClient" /> instance. </summary>
            <param name="builder"> The builder to register with. </param>
            <param name="endpoint">
            Supported Cognitive Services endpoints (protocol and hostname, for example:
            https://westus.api.cognitive.microsoft.com).
            </param>
        </member>
        <member name="M:Microsoft.Extensions.Azure.AzureOpenAIClientBuilderExtensions.AddOpenAIClient``2(``0,``1)">
            <summary> Registers a <see cref="T:Azure.AI.OpenAI.OpenAIClient" /> instance. </summary>
            <param name="builder"> The builder to register with. </param>
            <param name="configuration"> The configuration values. </param>
        </member>
        <member name="M:Azure.Core.ChangeTrackingDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Azure.Core.ChangeTrackingDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Keys">
            <summary>Gets an enumerable collection that contains the keys in the read-only dictionary.</summary><returns>An enumerable collection that contains the keys in the read-only dictionary.</returns>
        </member>
        <member name="P:Azure.Core.ChangeTrackingDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Values">
            <summary>Gets an enumerable collection that contains the values in the read-only dictionary.</summary><returns>An enumerable collection that contains the values in the read-only dictionary.</returns>
        </member>
        <member name="M:Azure.Core.ChangeTrackingList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Azure.Core.Pipeline.TaskExtensions.Enumerator`1.System#Collections#IEnumerator#Current">
            <summary>Gets the element in the collection at the current position of the enumerator.</summary><returns>The element in the collection at the current position of the enumerator.</returns>
        </member>
    </members>
</doc>
